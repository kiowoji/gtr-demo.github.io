{"mappings":"CCAA,AAMA,SAAgB,CAAQ,CAAE,EAAU,CAAC,CAAC,EAClC,IAAM,EAAQ,SAAS,aAAa,CAAC,GAC/B,EAAM,SAAS,cAAc,CAAC,WAE9B,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAAC,WACnB,EAAK,WAAW,CAAG,cAEhB,EAAQ,KAAK,EACZ,EAAM,YAAY,CAAC,WAAW,CAAA,GAE/B,EAAQ,MAAM,EAAI,MAAM,OAAO,CAAC,EAAQ,MAAM,GAC7C,EAAM,YAAY,CAAC,SAAU,EAAQ,MAAM,CAAC,IAAI,CAAC,MAGrD,EAAM,qBAAqB,CAAC,WAAW,GAGvC,YAAc,IAAM,EAAM,KAAK,GAC/B,cAAgB,AAAA,IAET,EAAM,MAAM,CAAC,KAAK,CAAC,MAAM,EAK5B,AAFc,MAAM,IAAI,CAAC,EAAM,MAAM,CAAC,KAAK,EAErC,OAAO,CAAC,AAAA,IACV,GAAG,CAAC,EAAK,IAAI,CAAC,KAAK,CAAC,SAChB,OAGR,IAAM,EAAS,IAAI,WACnB,EAAO,gBAAgB,CAAC,OAAQ,WAC9B,MAAQ,EAAO,MAAM,CACtB,EAAI,kBAAkB,CAAC,aAAc,CAAC;;0BAErB,EAAE,MAAM;;gBAElB,CAAC,EACP,QAAQ,GAAG,CAAC,MACd,EAAG,CAAA,GAWC,EAAO,aAAa,CAAC,EAEzB,EACJ,EAEA,EAAK,gBAAgB,CAAC,QAAS,aAC/B,EAAM,gBAAgB,CAAC,SAAU,cACrC,EAhEO,QAAQ,CACX,MAAM,CAAA,EACN,OAAQ,CAAC,OAAQ,OAAQ,QAAQ,AAErC","sources":["<anon>","src/js/uploader.js"],"sourcesContent":["var $458d896e1d50f57f$exports = {};\n$458d896e1d50f57f$var$upload(\"#file\", {\n    multi: true,\n    accept: [\n        \".png\",\n        \".jpg\",\n        \".jpeg\"\n    ]\n});\nfunction $458d896e1d50f57f$var$upload(selector, options = {}) {\n    const input = document.querySelector(selector);\n    const img = document.getElementById(\"preview\");\n    const open = document.createElement(\"div\");\n    open.classList.add(\"btn_add\");\n    open.textContent = \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0444\\u043E\\u0442\\u043E\";\n    if (options.multi) input.setAttribute(\"multiple\", true);\n    if (options.accept && Array.isArray(options.accept)) input.setAttribute(\"accept\", options.accept.join(\",\"));\n    input.insertAdjacentElement(\"afterend\", open);\n    trigerInput = ()=>input.click();\n    changeHendler = (event)=>{\n        // console.log(event.target.files)\n        if (event.target.files.length) return;\n        const files = Array.from(event.target.files);\n        files.forEach((file)=>{\n            if (!file.type.match(\"image\")) return;\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", function() {\n                image = reader.result;\n                img.insertAdjacentHTML(\"afterbegin\", `\n                <div class=\"preview-img\"> \n                <img src=\"${image}\">\n                </div>\n                `);\n                console.log(image);\n            }, false);\n            // reader.onload = ev => {\n            //     console.log('ev.target')\n            //     // preview.insertAdjacentHTML('afterbegin',`\n            //     // <div class=\"preview-img\">\n            //     //     <img src=\"${src}\" alt=\"${file.name}\"/>\n            //     // </div>\n            //     // `)\n            // }\n            reader.readAsDataURL(file);\n        });\n    };\n    open.addEventListener(\"click\", trigerInput);\n    input.addEventListener(\"change\", changeHendler);\n}\n\n\n//# sourceMappingURL=filter.b5f4117a.js.map\n","upload('#file',{\n    multi:true,\n    accept :['.png', '.jpg', '.jpeg']\n\n});\n\nfunction upload(selector, options = {}){\n    const input = document.querySelector(selector)\n    const img = document.getElementById('preview')\n\n    const open = document.createElement('div')\n    open.classList.add('btn_add')\n    open.textContent = 'Додати фото'\n\n    if(options.multi){\n        input.setAttribute('multiple',true)\n    }\n    if(options.accept && Array.isArray(options.accept)){\n        input.setAttribute('accept', options.accept.join(','))\n    }\n    \n    input.insertAdjacentElement('afterend',open)\n\n    \n    trigerInput = () => input.click()\n    changeHendler = event => {\n        // console.log(event.target.files)\n        if(event.target.files.length){\n            return\n        }\n        const files = Array.from(event.target.files)\n\n        files.forEach(file => {\n            if(!file.type.match('image')){\n                return\n            }\n                \n        const reader = new FileReader(); \n        reader.addEventListener(\"load\", function () { \n          image = reader.result;\n         img.insertAdjacentHTML('afterbegin', `\n                <div class=\"preview-img\"> \n                <img src=\"${image}\">\n                </div>\n                ` )\n          console.log(image)\n        }, false);\n            \n            // reader.onload = ev => {\n            //     console.log('ev.target')\n            //     // preview.insertAdjacentHTML('afterbegin',`\n            //     // <div class=\"preview-img\">\n            //     //     <img src=\"${src}\" alt=\"${file.name}\"/>\n            //     // </div>\n            //     // `)\n            // }\n\n            reader.readAsDataURL(file)\n            \n        })\n    }\n    \n    open.addEventListener('click', trigerInput)\n    input.addEventListener('change', changeHendler)\n}"],"names":["$458d896e1d50f57f$var$upload","selector","options","input","document","querySelector","img","getElementById","open","createElement","classList","add","textContent","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","trigerInput","click","changeHendler","event","target","files","length","from","forEach","file","type","match","reader","FileReader","addEventListener","image","result","insertAdjacentHTML","console","log","readAsDataURL"],"version":3,"file":"filter.b5f4117a.js.map"}